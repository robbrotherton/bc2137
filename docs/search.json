[
  {
    "objectID": "index.html#course-details",
    "href": "index.html#course-details",
    "title": "Social Psychology Lab Handbook",
    "section": "Course details",
    "text": "Course details\n\n\n\nPre-requisites: PSYC BC1001 Introduction to Psychology; PSYC BC1101 Statistics; PSYC BC 1024 Research Methods\nCo-requisite: PSYC BC2138 Social Psychology\n\nTime, venue & instructor\nSection 001: Thursday 10:10-1PM, Milbank 410\nSection 002: Thursday 1:10-4:00PM, Milbank 410\nInstructor: Dr. Rob Brotherton (rbrother@barnard.edu)\nOffice hour: TBC"
  },
  {
    "objectID": "index.html#course-overview",
    "href": "index.html#course-overview",
    "title": "Social Psychology Lab Handbook",
    "section": "Course overview",
    "text": "Course overview\nThis lab will usually be taken concurrently with BC2138 Social lecture. It will expand upon some of the theoretical, methodological and analytic issues introduced there, as well as giving you the opportunity to explore topics of your choosing from within (or beyond) those covered in the lectures in greater depth through hands-on experience with research design and data analysis.\nThe semester is broken into 3 projects. The first will involve planning and executing a correlational analysis of existing data. The second will involve performing an ANOVA analysis on existing data. The third project will involve proposing a novel experiment. Through these projects you will gain experience in formulating social-psychological research questions; collecting, analyzing and visualizing data; and interpreting and communicating your findings. Projects will be undertaken in groups; group members will collaborate on design and analysis. Each project will culminate in an in-class group presentation and submission of a brief individual write up of your project.\n\nClass format & participation\nLabs are substantially more interactive and discussion-based than the traditional lecture format, and depend on everyone’s active participation in class discussions and activity as well as group work focused around the projects. Your active participation across the semester will therefore contribute a substantial portion of your grade.\nIf you have questions, thoughts, or ideas you want to share, feel free to do so at any time (while keeping within the bounds of polite conversation, obviously–don’t interrupt or talk over other people! But do feel free to respond to others without having to raise your hand or wait to be called on). Everyone will get the most out of this lab when the discussion can develop organically and everyone feels free to be part of the conversation if & when they have something to add.\nBeing part of the in-person discussion is one obvious way to participate, but it’s not the only way. Different people have different styles of participation, and the lab is designed to try and accommodate and encourage different approaches. Your level of engagement with your project partner(s), your TA and Prof. Brotherton as you work through your projects is also an important form of participation. You can also participate by coming to office hours.\nAt a minimum (i.e. for a passing grade), I’ll be looking for some form of participation (loosely defined) from you every week. Higher participation grades will be earned through regular, enthusiastic, productive participation (note that quality is more important than quantity).\n\n\nWorkload\nAs a general rule for the amount of time students should expect to commit to classes, the college suggests three hours per week in or outside of class per credit. Since this class is worth 1.5 credits, that corresponds to 4.5 hours per week, split between time in the classroom and time spent completing the associated assignments.\n\n\nFinal Grades\nYour numeric score for the course is a product of your scores for each assignment, weighted as follows:\n\n\n\n\n\n\nWeight (%)\n\n\n\n\nParticipation (over the course of the semester)\n10\n\n\nPresentations\n30\n\n\nReports\n60\n\n\n\n\n\nFinal grades are determined according to the following boundaries:\nLetter grade:  A+ A  A- B+ B  B- C+ C  C- D  F\nNumeric score: 97 93 90 87 83 80 77 73 70 60 <60"
  },
  {
    "objectID": "index.html#course-policies",
    "href": "index.html#course-policies",
    "title": "Social Psychology Lab Handbook",
    "section": "Course policies",
    "text": "Course policies\n\nAttendance & timeliness\nIn-person attendance of every lab session is expected, and you should expect to stay for the full duration of the lab. Normally it is departmental policy to remove students who miss more than two lab sessions from the course; however, given ongoing revisions to college-wide health-related policies, exceptions may be made. If you are feeling unwell, you should not come to class and notify me of nonattendance before class if possible.\nWhen you are attending, please arrive on time for class. Frequent lateness will impact your participation grade.\n\n\nAssignment deadlines & late policy\nAssignments are listed in the class schedule next to the class in which details about completing the assignment will be provided. The assignment must be completed and submitted before the following class, i.e. requirements for the first presentation slide will be explained in class on 10/5, and the slide must be submitted before the next class on 10/12.\nFor the written project reports, a grade penalty of 5 points will be applied for each day (or part thereof) that an assignment is late (up to a maximum of 6 days; work not submitted before the next lab will receive a score of zero). For example, if your work is A+ quality but is submitted a day-and-a-half late, you will only receive a B+. This policy is intended to incentivize timely submission while easing the stress of genuine emergencies. When things come up that prevent timely submission you can prioritize accordingly, knowing that a small penalty on one assignment for this lab will not tank your final grade.\nLate submission for the presentation slides will not be possible; failure to submit a link to your slides in advance of the presentation will obviously limit your presentation grade.\n\n\nAcademic integrity\nStudents are expected to follow the Barnard Honor Code, available at https://barnard.edu/honor-code.\nNote that while you will collaborate with group members on the design, analysis, and presentation of research projects, you may not collaborate on the written report: each group member must write their own individual reports.\n\n\nAcademic accommodations and general wellness\nIt is always important to recognize the different pressures, burdens, and stressors you may be facing, whether personal, emotional, physical, financial, mental, or academic. The faculty and administration recognize this, and are prepared to provide assistance to students in need. I encourage you to seek advice from your advisor, Dean, the Center for Accessibility Resources & Disability Services (CARDS), or Barnard Health & Wellness as needed. Please let me know of any issues you wish to share with me that you feel are impacting your ability to complete the course to the best of your ability. Though it isn’t always easy, it is better to proactively seek help rather than letting problems build up."
  },
  {
    "objectID": "index.html#class-schedule",
    "href": "index.html#class-schedule",
    "title": "Social Psychology Lab Handbook",
    "section": "Class schedule",
    "text": "Class schedule\n\n\n\n\n \n  \n    Date \n    Topic \n    Assignment* \n  \n \n\n  \n    9/14 \n    Course overview \n     \n  \n  Project 1: Correlation\n\n    9/21 \n    Project planning \n     \n  \n  \n    9/28 \n    Data cleaning \n     \n  \n  \n    10/5 \n    Analysis \n    Presentation slide \n  \n  \n    10/12 \n    Presentations \n    Project 1 report \n  \n  Project 2: ANOVA\n\n    10/19 \n    Project planning \n     \n  \n  \n    10/26 \n    Data cleaning & analysis \n     \n  \n  \n    11/2 \n    Visualization & reporting \n    Presentation slide \n  \n  \n    11/9 \n    Presentations \n    Project 2 report \n  \n  Project 3: Experiment proposal\n\n    11/16 \n    Project planning \n     \n  \n  \n    11/23 \n    No class (Thanksgiving) \n     \n  \n  \n    11/30 \n    Questionnaire design \n    Presentation slide \n  \n  \n    12/7 \n    Presentations \n    Project 3 report \n  \n\n\n\n\n* due by the following class"
  },
  {
    "objectID": "lab-2.html#project-overview",
    "href": "lab-2.html#project-overview",
    "title": "Lab 2: Project Planning",
    "section": "Project overview",
    "text": "Project overview\nWith this project you will examine a correlation between social psychological constructs using real survey data.\nA correlation refers an association between two things. It is a statement of a statistical relationship–a general tendency, rather than a rigid law. To say that something correlates with something else–for example, satisfaction with ones friendships is correlated with wellbeing or prejudice is correlated with endoresement of stereotypes towards a group–is to say that those things tend to go together. Not everyone who feels great satisfaction in their friendships will report greater wellbeing than anyone with less social satisfaction, but there is some tendency for the two to go together on the whole.\nOf course, these kind of correlations aren’t just facts found lying around in nature; they are empirical findings produced by researchers. All the findings you learn about in the social psychology lecture (and beyond) are the product of research procedures. Researchers decide what psychological constructs they want to investigate; how to measure those constructs; what statistical analyses are appropriate; and what conclusions may be drawn.\n\nStep 1. Examine the data and identify your variables\nThe dataset we will use is from the American National Election Studies (ANES), academic surveys of voters in the United States conducted before and after every presidential election, going back to the 1940s. Specifically, for this project we will use data collected around the 2020 election, since it’s the most recently conducted complete survey.\nThe kind of correlation analysis you will perform examines whether two constructs are related. The full dataset contains more than 1,000 questions reflecting various constructs. Since this is your first project I am going to constrain your choice. You will investigate how perceived threats affect people’s trust. What kinds of threats lead to increasing distrust in government and/or other people?\nOne of your variables will be a question assessing perceived threat:\n\nHow worried are you about losing your job in the near future? (V201540)\nSo far as you and your family are concerned, how worried are you about your current financial situation? (V201594)\nHow concerned are you about losing your health insurance in the next year? (V201621)\nHow concerned are you about being able to pay health care expenses for you and your family in the next year? (V201622)\nHow worried do you feel about how things are going in the country? (V201120)\nWhat do you think about the state of the economy these days in the United States? (V201324)\nHow worried are you that the United States will experience a terrorist attack in the near future? (V202358)\n\nYour second variable will be a question about trust:\n\nHow often can you trust the federal government in Washington to do what is right? (V201233)\nHow many of the people running the government are corrupt? (V201236)\nGenerally speaking, how often can you trust other people? (V201237)\n\nTo see exactly how these constructs were measured you will look up the variable IDs (the codes beginning with V in parentheses above) in the Codebook.\n\n\nStep 2. Read relevant research\nReal research doesn’t happen in a vacuum; research plans and expectations should be informed by what has come before. Therefore once you know which variables you will analyze, you will see what other researchers have found about these (or related) constructs.\nA real research project would involve an exhaustive literature review, in which you attempt to find and understand all the research relevant to your question. Since this project of ours is just for practice and our time is limited, you don’t need to read everything; pick one of these papers to skim to give you an idea of what has been found.\n\n\n\nSchlipphak, B. (2021). Threat perceptions, blame attribution, and political trust. Journal of Elections, Public Opinion and Parties. https://doi.org/10.1080/17457289.2021.2001474\n\n\n\nStep 3. Articulate your design and hypothesis\nBy this point you should be able to state your:\n\nOperational definitions (that is, the specific questions that were asked of participants per the codebook)\nThe constructs that those operational definitions measure (i.e. does the question measure perceived threat in general? Or some more specific form of perceived threat?)\nYour hypothesis\n\nYour hypothesis is a formal statement of your expectation about how your constructs are (or aren’t) associated, and it will be tested quantitatively by calculating a correlation statistic.\nThe main question that your hypothesis addresses is: do you think the two variables will be significantly correlated? That is, will you find an association consistent enough that it doesn’t just seem to be attributable to chance variation in the data (even random data will produce spurious correlations by chance some of the time; see spuriouscorrelations.com).\nIf you do expect a significant correlation, you should also specify whether you expect it to be positive or negative, and how strong of a correlation you expect it to be (i.e. weak, moderate, strong; see Appendix B)."
  },
  {
    "objectID": "lab-2.html#to-do-for-next-time",
    "href": "lab-2.html#to-do-for-next-time",
    "title": "Lab 2: Project Planning",
    "section": "To do for next time",
    "text": "To do for next time\nRead up on the development of the TIPI (Gosling et al., 2003).\nThe more detailed your understanding of how the Big Five trait was measured, the better you will be able to interpret the results of your analysis."
  },
  {
    "objectID": "lab-3.html#working-with-data-in-r",
    "href": "lab-3.html#working-with-data-in-r",
    "title": "Lab 3: Data cleaning",
    "section": "Working with data in R",
    "text": "Working with data in R\n\nGetting R ready\nIn addition to containing a Big 5 personality scale, the ANES 2016 dataset is convenient for our purposes because someone went to the trouble of creating an R package which makes working with the ANES data relatively straightforward (not that you won’t still run into issues!): anesr (github.com/jamesmartherus/anesr).\nTo start exploring the data in R, you first need to set up your environment. This means installing the anesr package. Usually packages can be installed from within R using the install.packages() function. However since the anesr package is hosted on GitHub (as opposed to the official R repository of packages), the easiest way to install it is by first installing the devtools package, which has a special function for installing packages from GitHub.\n\ninstall.packages(\"devtools\")\n\ndevtools::install_github(\"jamesmartherus/anesr\")\n\nWe will also use some other packages for data wrangling and analysis. Developers have created a collection of packages for R called the tidyverse to make coding these common tasks easier. The tidyverse can be installed like so:\n\ninstall.packages(\"tidyverse\")\n\nIf you execute those lines of code the packages will be installed on your system. That step only needs to be done once, but you need to ‘activate’ the packages using library() to make their functions and data available each time to start a new R session.\n\nlibrary(anesr)\nlibrary(tidyverse)\n\n\n\nGetting data into R\nGetting data into R often involves reading in a .csv (comma-separated values) spreadsheet file that you downloaded to your computer. Indeed, you could download the ANES 2016 data file as a .csv from the ANES website and read it into R that way. However, the anesr package contains the data so you don’t need to download it separately. Instead you can make it available by running this line of code:\n\ndata(timeseries_2016)\n\nWhen you execute the code you won’t see any output, but you should see the name timeseries_2016 appear in your Environment pane. That is now an object in R called a data.frame. You can think of it as a spreadsheet like you’re familiar with from Excel or Google Sheets; a set of columns, one for each variable in the dataset, and a row for each participant’s answers.\nTyping the name of the data.frame and running that line of code will show the first few columns and rows.\n\ntimeseries_2016\n\n# A tibble: 4,270 × 1,842\n   version       V160001 V160001_orig V160101 V160101f V160101w V160102 V160102f\n   <chr>           <dbl>        <dbl>   <dbl>    <dbl>    <dbl>   <dbl>    <dbl>\n 1 ANES2016Time…       1       300001   0.827    0.888        0   0.842    0.927\n 2 ANES2016Time…       2       300002   1.08     1.16         0   1.01     1.08 \n 3 ANES2016Time…       3       300003   0.388    0.416        0   0.367    0.398\n 4 ANES2016Time…       4       300004   0.360    0.385        0   0.366    0.418\n 5 ANES2016Time…       5       300006   0.647    0.693        0   0.646    0.726\n 6 ANES2016Time…       6       300007   0.706    0.759        0   0.688    0.725\n 7 ANES2016Time…       7       300008   3.96     4.25         0   4.62     4.79 \n 8 ANES2016Time…       8       300012   0.962    1.03         0   0.943    1.04 \n 9 ANES2016Time…       9       300018   0.976    1.05         0   1.01     1.07 \n10 ANES2016Time…      10       300020   0.618    0.664        0   0.600    0.638\n# ℹ 4,260 more rows\n# ℹ 1,834 more variables: V160102w <dbl>, V160201 <dbl>, V160201f <dbl>,\n#   V160201w <dbl>, V160202 <dbl>, V160202f <dbl>, V160202w <dbl>,\n#   V160501 <hvn_lbll>, V160502 <hvn_lbll>, V161001 <hvn_lbll>,\n#   V161002 <hvn_lbll>, V161003 <hvn_lbll>, V161004 <hvn_lbll>,\n#   V161005 <hvn_lbll>, V161006 <hvn_lbll>, V161007 <hvn_lbll>,\n#   V161008 <hvn_lbll>, V161009 <hvn_lbll>, V161010a <hvn_lbll>, …\n\n\nYou can also click on the name in the Environment pane to view the data in a new tab.\n\n\nSelect your variables\nAs you can see, the data.frame contains a lot of variables; there are 1,842 columns of data. You’ll only need a few of those. So the first step is selecting just the variables you need to work with.\nThere are a lot of ways to do this. The simplest would be to make a note of the variable IDs from the codebook and use the select() function.1 This allows us to simply type in variable names separated by commas.\nFor this example I’ll look at the correlation between extraversion and the Democratic party feeling thermometer. Extraversion has two TIPI items; their IDs (from the codebook) are V162333 and V162338. The ID for the Democratic Party feeling thermometer is V161095. Since I’ll probably forget which ID is which, I’ll give the columns more meaningful names as I select them.\n\nmy_data <- timeseries_2016 |> \n  select(extraversion1 = \"V162333\", \n         extraversion2 = \"V162338\",\n         feeling_thermometer = \"V161095\")\n\nLet’s see what this new data.frame looks like:\n\nmy_data\n\n# A tibble: 4,270 × 3\n   extraversion1 extraversion2 feeling_thermometer\n   <hvn_lbll>    <hvn_lbll>    <hvn_lbll>         \n 1 6             5              0                 \n 2 6             6             15                 \n 3 6             2             50                 \n 4 6             4             30                 \n 5 5             7             70                 \n 6 5             6             15                 \n 7 5             1             85                 \n 8 6             3              0                 \n 9 7             1             15                 \n10 5             5             50                 \n# ℹ 4,260 more rows\n\n\nIt all looks good so far. But if you inspect the data more extensively (click the name in your Environment to open a tab showing the data and scroll down a bit) you’ll notice that there are some negative numbers in the data. That’s from survey codes which record missing data. If you try to calculate an average score with those included it’ll mess up the sums, so we need to do some data cleaning to handle things like that.\n\n\nCleaning the data\nThere are a lot of different ways we could handle this. One way is to filter() the data, retaining only rows which meet certain conditions.2\nThe ANES coding scheme uses negative values for the various kinds of missing or inappropriate data, which makes things simple: only positive values are valid and should be retained.\nTo implement this as a filter(), we can use the if_all() function; i.e., we are going to select some columns and if all the values in those columns meet some condition the row will be retained. To select the columns we can use the everything() function, since the positive-valid/negative-invalid rule is true of every column in our data. The part after the comma, ~ . >= 0, articulates the condition. The ~ prefix is necessary because instead of naming one specific column to refer to its values we use . as a placeholder representing the values in each of the selected columns; the value must be greater than or equal to 0 to be retained.3\n\nmy_data_complete <- my_data |> \n  filter(if_all(everything(), ~ . >= 0))\n\nNotice that the number of rows in the data.frame has changed, because rows that didn’t meet that condition have been dropped.\n\nnrow(my_data)\n\n[1] 4270\n\nnrow(my_data_complete) \n\n[1] 3540\n\n\nAfter filtering to keep only rows with complete data, we’re left with 3,540 valid responses.\n\n\nComputing scale averages\nNow that we have selected our columns and filtered out missing/invalid responses, the last thing to do is compute any new values required for analysis. As an example, if you have a scale which has multiple questions asking about a particular construct, it is often necessary to compute an average score for each participant.\nThe TIPI has 10 questions in total, two for each of the Big 5 personality traits, so it may be desirable to compute a mean trait score by averaging its two respective items.\nNotice, however, that for each of the 5 traits, one question is positively worded and one is negatively worded. For extraversion, item V162333 (which I renamed extraversion1) is “extraverted, enthusiastic”, while item V162338 (renamed extraversion2) is “reserved, quiet”. The second one needs to be reverse-coded, so that higher scores on both items indicate greater extraversion. Since answers can range from 1 to 7, an easy way to recode the scores is to subtract the participant’s response from 8; 1 becomes 7, 2 becomes 6, etc.\n\nmy_data_complete <- my_data_complete |>\n    mutate(extraversion2 = 8 - extraversion2)\n\nNow we can go ahead and compute the average, using mutate() to create a new column (named extraversion_mean) consisting of the rowMeans() (i.e. an average for each row) across() the specified columns (those for which the column name contains(\"extraversion\").\n\nmy_data_complete <- my_data_complete |>\n    mutate(extraversion_mean = rowMeans(across(contains(\"extraversion\"))))\n\nLet’s see how it looks.\n\nmy_data_complete\n\n# A tibble: 3,540 × 4\n   extraversion1 extraversion2 feeling_thermometer extraversion_mean\n   <hvn_lbll>    <hvn_lbll>    <hvn_lbll>                      <dbl>\n 1 6             3              0                                4.5\n 2 6             2             15                                4  \n 3 6             6             50                                6  \n 4 6             4             30                                5  \n 5 5             1             70                                3  \n 6 5             2             15                                3.5\n 7 5             7             85                                6  \n 8 6             5              0                                5.5\n 9 7             7             15                                7  \n10 5             3             50                                4  \n# ℹ 3,530 more rows\n\n\nWe have our two extraversion items (one reverse-coded), the feeling thermometer rating, and the computed extraversion mean scores for each of the 3,540 participants with complete data. We’re ready to analyze the data!"
  },
  {
    "objectID": "lab-4.html#analyzing-data-in-r",
    "href": "lab-4.html#analyzing-data-in-r",
    "title": "Lab 4: Analysis",
    "section": "Analyzing data in R",
    "text": "Analyzing data in R\nRunning with my example from last week, my variables were average extraversion scores and the Democratic Party feeling thermometer score. I made a data.frame with just those variables; filtered the data down to complete, valid responses; recoded the negatively-worded item; and computed an extraversion mean score. To refresh your memory, here’s the entire pipeline from start to finish:\n\nlibrary(tidyverse)\nlibrary(anesr)\ndata(timeseries_2016)\n\nmy_data_complete <- timeseries_2016 |> \n  select(extraversion1 = \"V162333\", \n         extraversion2 = \"V162338\",\n         feeling_thermometer = \"V161095\") |> \n  filter(if_all(everything(), ~ . >= 0)) |> \n  mutate(extraversion2 = 8 - extraversion2,\n         extraversion_mean = rowMeans(across(contains(\"extraversion\"))))\n\n\nDescribing your data\nThe most common descriptive statistics are the mean (\\(M\\)) and standard deviation (\\(SD\\)). You should report these for each variable in your analysis.\nYou can find the mean of each column in a data.frame using R’s built-in colMeans() function.\n\ncolMeans(my_data_complete)\n\n      extraversion1       extraversion2 feeling_thermometer   extraversion_mean \n           4.787006            3.649718           48.317232            4.218362 \n\n\nThere’s no built-in equivalent for finding the standard deviation of columns, but there is a basic sd() function, which you could apply to each column in turn:\n\nsd(my_data_complete$extraversion1)\n\n[1] 1.579163\n\nsd(my_data_complete$extraversion2)\n\n[1] 1.764589\n\n# etc\n\nThis might be a perfectly appropriate approach, but with a lot of variables it might not be the most efficient (and it kind of violates the DRY principle: don’t repeat yourself).\nA slightly more complicated but very powerful approach is to use tidyverse functions to reshape the data and summarize() each of the variables. First, transform the structure of the data using pivot_longer(). This produces a data.frame with just two columns, one with all the numeric scores (“value”), and the other labeling which column each value came from (“variable”). Then we group_by(variable), meaning that any subsequent computations will be performed separately for each variable. Finally we pipe the data.frame into the summarize() function. There you can create any number of named variables, each computing some kind of summary. Since the data is grouped, each variable (“extraversion1”, extraversion2”, etc) gets its own count, mean, and standard deviation.\n\nmy_data_complete |>\n  pivot_longer(everything(), \n               names_to = \"variable\", \n               values_to = \"value\", \n               values_transform = as.numeric) |> \n  group_by(variable) |> \n  summarize(count_valid = n(),\n            mean = mean(value), \n            sd = sd(value))\n\n# A tibble: 4 × 4\n  variable            count_valid  mean    sd\n  <chr>                     <int> <dbl> <dbl>\n1 extraversion1              3540  4.79  1.58\n2 extraversion2              3540  3.65  1.76\n3 extraversion_mean          3540  4.22  1.38\n4 feeling_thermometer        3540 48.3  30.0 \n\n\n\n\nVisualizing the data\nIn addition to reporting the mean and standard deviation, it is useful to visualize the distribution of the data. This can reveal nuances that are not obvious in those single numeric summary values.\nAs with most things, there are a lot of different ways of producing graphs using R. One of the most widely used and powerful is the ggplot2 package.1 The name refers to the idea of the “grammar of graphics”, and it is built around a layering approach. You first specify your data and aesthetics (what should data will go on the x and y axes), then geometry (do you want data to be represented by points or bars or as a histogram?), any scaling (e.g. what values should be labeled on each axis), and theme elements (how do you want the plot to look generally?). There can be a lot of complexity, but building things up layer by layer, gradually adding and refining elements, is a powerful and satisfying approach.\nHere’s a simple histogram of the first extraversion item. I pipe the data into the ggplot() function, specifying that I want the extraversion1 column to be represented as the x aesthetic. Then I add geometry using geom_histogram. That geom function automatically computes bins and counts; here I just specify I want a binwidth of 1, i.e. each column of the histogram will represent one scale point. Note that ggplot layers are added using + rather than the usual |> pipe.\n\nmy_data_complete |> \n  ggplot(aes(x = extraversion1)) +\n  geom_histogram(binwidth = 1)\n\nDon't know how to automatically pick scale for object of type <haven_labelled>.\nDefaulting to continuous.\n\n\n\n\n\nFigure 1: Histogram of responses to “extraverted, enthusiastic” TIPI item\n\n\n\n\nThe default theme is perfectly serviceable, but you can customize every element. Here I’ll specify a couple of aspects using the theme() function, and I’ll assign it to the name theme_apa. Then I can always add theme_apa as a layer to my plots going forward.\n\ntheme_apa <- theme(\n  panel.background = element_blank(),\n  axis.line = element_line()\n)\n\nI’ll also customize the “breaks” on the x-axis (where the ticks and numeric labels go) and the axis labels.\n\nmy_data_complete |> \n  ggplot(aes(x = extraversion1)) +\n  geom_histogram(binwidth = 1, color = \"white\") +\n  scale_x_continuous(breaks = 1:7) +\n  labs(x = \"Responses to extraversion item 1: extraverted, enthusiastic\",\n       y = \"Number of responses\") +\n  theme_apa\n\n\n\n\nFigure 2: Histogram of responses to “extraverted, enthusiastic” TIPI item\n\n\n\n\nHere’s a histogram of the other TIPI extraversion item.\n\nmy_data_complete |> \n  ggplot(aes(x = extraversion2)) +\n  geom_histogram(binwidth = 1, color = \"white\") +\n  scale_x_continuous(breaks = 1:7) +\n  labs(x = \"Responses to extraversion item 2: reserved, quiet (reverse-coded)\",\n       y = \"Number of responses\") +\n  theme_apa\n\n\n\n\nFigure 3: Histogram of responses to “reserved, quiet” TIPI item\n\n\n\n\nAnd here’s a histogram of the average extraversion scores I computed.\n\nmy_data_complete |> \n  ggplot(aes(x = extraversion_mean)) +\n  geom_histogram(binwidth = 0.5, color = \"white\") +\n  scale_x_continuous(breaks = 1:7) +\n  labs(x = \"Average scores across both TIPI extraversion items\",\n       y = \"Count\") +\n  theme_apa\n\n\n\n\nFigure 4: Histogram of average scores on TIPI Extraversion subscale\n\n\n\n\nNotice that while both individual extraversion items were a bit skewed, the distribution of averages is approximately normally-distributioned (albeit with a big spike in the middle).\nLastly, I’ll make a histogram of the feeling thermometer variable.\n\nmy_data_complete |> \n  ggplot(aes(x = feeling_thermometer)) +\n  geom_histogram(binwidth = 1, color = \"white\") +\n  scale_x_continuous(breaks = seq(from = 0, to = 100, by = 10)) +\n  labs(x = \"Responses to Democratic Party feeling thermometer\",\n       y = \"Count\") +\n  theme_apa\n\n\n\n\nFigure 5: Histogram of responses to Democratic Party feeling thermometer\n\n\n\n\nI chose a binwidth of 1, which isn’t necessarily the most appropriate value for a 0 to 100, but it does reveal an interesting distribution of responses. People’s responses are not evenly distributed across the 0 to 100 scale; rather, some values (particularly multiples of 10) are chosen much more frequently than others."
  },
  {
    "objectID": "lab-4.html#correlation-analysis",
    "href": "lab-4.html#correlation-analysis",
    "title": "Lab 4: Analysis",
    "section": "Correlation analysis",
    "text": "Correlation analysis\n\nThe correlation statistic\nThe correlation statistic can be computed with a single line of code, as you’ll see. But it’s important to understand the math happening behind the scenes.\n\n\nCorrelation in R\nThe data is ready to be analyzed. The correlation between two variables can be found using the cor() function.\n\ncor(x = my_data_complete$extraversion_mean, \n    y = my_data_complete$feeling_thermometer)\n\n[1] -0.01012898\n\n\nIf you got an answer of NA instead of a number, it is probably because your data has some missing data. You just need to tell cor() to only use data for which both pairs of values are nonmissing:\n\ncor(x = my_data_complete$extraversion_mean, \n    y = my_data_complete$feeling_thermometer,\n    use = \"pairwise.complete.obs\")\n\n[1] -0.01012898\n\n\nThe cor.test() function goes further than cor(), giving you the \\(p\\)-value necessary for determining statistical significance2 and some other information about the correlation.\n\ncor.test(x = my_data_complete$extraversion_mean, \n         y = my_data_complete$feeling_thermometer)\n\n\n    Pearson's product-moment correlation\n\ndata:  my_data_complete$extraversion_mean and my_data_complete$feeling_thermometer\nt = -0.60251, df = 3538, p-value = 0.5469\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.04305838  0.02282241\nsample estimates:\n        cor \n-0.01012898 \n\n\nLastly, let’s make a scatterplot visualizing the correlation.\n\nmy_data_complete |> \n  ggplot(aes(x = extraversion_mean, y = feeling_thermometer)) +\n  geom_point(position = position_jitter(width = 0.4, height = 0), \n             alpha = 0.1) +\n  scale_x_continuous(breaks = 1:7) +\n  scale_y_continuous(breaks = seq(from = 0, to = 100, by = 10)) +\n  theme_apa\n\n\n\n\nFigure 6: Scatterplot (with jitter) of average extraversion scores and feeling thermometer scores\n\n\n\n\nYou can see horizontal bands which correspond to those big spikes on the feeling thermometer that the histogram revealed. Consistent with the correlation coefficient which was close to zero with a nonsignificant \\(p\\)-value, visually it doesn’t look like there’s much of an association between the feeling thermometer responses and extraversion scores."
  },
  {
    "objectID": "lab-5.html#presentation",
    "href": "lab-5.html#presentation",
    "title": "Lab 5: Presentation & report",
    "section": "Presentation",
    "text": "Presentation\n\nGuide to presenting\nEach team will give a short presentation which should encapsulate the motivation, methods, anticipated findings, and interpretation of your proposed project. Aim for clarity, conciseness, and being bold to spark the audience’s interest in your topic and findings.\nAvoid simply reading excerpts from your paper. That would be boring, and would probably take up too many words. Make it fun and interesting. Try to grab the audience’s attention and hit them with just the most important points of your ideas.\nMake your slides count. You can’t just cram a load of text on there, because nobody will be able to read it. Plus, it’d distract from what you’re saying. Make it a visual aid that somehow supports or clarifies what you’re saying. It might be a visual representation of your design, a key piece of your experimental stimuli, a graph of your expected results, or just a pertinent meme which conveys the motivation for your question.\nAfter your presentation the group will take a few questions from the audience, and your responsiveness will contribute toward your grade as well as the quality of your presentation itself (remember a perfectly acceptable answer if often: “Good question; I don’t know the answer! But here are some thoughts…”). It’s not usually an issue, but just in case your audience is left speechless, I suggest coming with a couple of questions or thoughts of your own that you can throw at the audience to spark more questions (“You might be wondering…”).\nIt is up to each group to decide how to divide up the talk, and to practice to make sure the presentation is to time.\n\n\nGuide to watching presentations\nAs an audience member, you are still being graded for class participation. That means giving everyone else’s presentation the attention and enthusiasm it deserves, and rewarding their hard work with questions. (Going to the trouble of putting together a presentation only for nobody to have anything to say about it is not a good feeling.)\nGood questions to ask are things like “Could you clarify X”, “Had you considered Y”, or “How might this relate to Z.” One reason for presenting your project is to hopefully get some useful feedback from the audience with which to refine your final paper, so try to give the kind of feedback you hope to receive."
  },
  {
    "objectID": "lab-5.html#sec-report",
    "href": "lab-5.html#sec-report",
    "title": "Lab 5: Presentation & report",
    "section": "Written report",
    "text": "Written report\nYou will produce a miniature research paper reporting your project. Note that each team member will produce their own individual report; even though the project has been collaborative, your write up will be your own.\n\nFormat\nYour report should consist of the following sections:\n\nIntroduction (two or three paragraphs, including summary of relevant research and hypothesis)\nMethod (a description of the variables you selected, the number of valid responses, and any other information about the procedures that generated the data that you think necessary to report)\nResults (a technical report of any descriptive statistics, figures, and statistics you produced)\nDiscussion (a paragraph or two interpreting your results and drawing conclusions)\n\n\n\nDeadline\nThe report is due by the next class (see late policy from Syllabus 3.2).\n\n\nGrading\nYou will receive a score out of 100 for your report. See Appendix C for general qualitative criteria which will be assessed in the context of the expectations detailed above."
  },
  {
    "objectID": "lab-6.html#project-overview",
    "href": "lab-6.html#project-overview",
    "title": "Lab 6: Project planning",
    "section": "Project overview",
    "text": "Project overview\nDependent variable:\nPotential independent variables\n\nRacial identity\nGender identity\nPartisanship (stated; vote)\nIncome\nAge\nMedia\nLife experiences (Next, we have a few questions about your personal experiences. )\n\nDo you personally know someone who moved to the U.S. from another country, or not? (V202561)\nDo you currently owe money on student loans, or not? (V202562)\nHave you ever received food stamps or another form of public assistance, or not? (V202563)\nDo you have a pension or a retirement account, such as an IRA, 401k, or similar, or not? (V202564)\nDo you regularly choose products because they are made in America, or not? (V202565)\nHave you displayed an American flag on your house or in your yard in the past year, or not? (V202566)\nHave you gone hunting or fishing in the past year, or not? (V202567)\nHave you used public transportation in the past year, or not? (V202568)\nHave you ever been bitten by a shark, or not? (V202569)"
  },
  {
    "objectID": "lab-7.html#data-wrangling-description-and-visualization",
    "href": "lab-7.html#data-wrangling-description-and-visualization",
    "title": "Lab 7: Data cleaning & analysis",
    "section": "Data wrangling, description, and visualization",
    "text": "Data wrangling, description, and visualization\n\nData wrangling"
  },
  {
    "objectID": "lab-8.html#checking-model-assumptions",
    "href": "lab-8.html#checking-model-assumptions",
    "title": "Lab 8: Visualization & interpretation",
    "section": "Checking model assumptions",
    "text": "Checking model assumptions"
  },
  {
    "objectID": "lab-9.html",
    "href": "lab-9.html",
    "title": "Lab 9: Presentation & report",
    "section": "",
    "text": "Present in class.\nWrite up due by next class."
  },
  {
    "objectID": "lab-10.html#goals",
    "href": "lab-10.html#goals",
    "title": "Lab 10: Proposal planning",
    "section": "Goals",
    "text": "Goals\n\nUnderstand the process of scale design and validation\nPick a personality trait to design a scale around\nWrite a brief proposal of your project and expectations"
  },
  {
    "objectID": "lab-12.html",
    "href": "lab-12.html",
    "title": "Lab 12: Proposal Presentations",
    "section": "",
    "text": "This week each project team will present their proposed project to the rest of the class."
  },
  {
    "objectID": "appendix-r-basics.html#posit.cloud",
    "href": "appendix-r-basics.html#posit.cloud",
    "title": "Appendix A — Getting started with R",
    "section": "posit.cloud",
    "text": "posit.cloud\nYou will use posit.cloud to write R code and work with data in RStudio. To use it you’ll just need to sign up for a free account.\n\nLet’s do something cool\nOnce you have a posit.cloud account, click this link.\n\n\nWait, what are you talking about?\nThere are a few different names involved here, so to try and clear things up:\n\nR is a coding language\nRStudio is a software interface for using R\nPosit is the name of the company that makes RStudio\nposit.cloud provides a way of using RStudio in your web browser\n\nYou can install R and RStudio on your own computer for free and do things that way, but using the cloud-based RStudio via posit.cloud simplifies things immensely."
  },
  {
    "objectID": "appendix-r-basics.html#fundamentals-of-r-for-data-analysis",
    "href": "appendix-r-basics.html#fundamentals-of-r-for-data-analysis",
    "title": "Appendix A — Getting started with R",
    "section": "Fundamentals of R for data analysis",
    "text": "Fundamentals of R for data analysis\nR is a programming language well-suited to interactive data exploration and analysis. It might seem daunting if you’ve have no experience with coding, but the basic idea is that you have some data, like you are familiar with from a regular Excel or Google Sheets spreadsheet, and you perform operations on your data using functions a lot like you would in Excel/Sheets. For example, you might compute an average in Sheets by typing =AVERAGE(A1:A10). In R you might type mean(my_data$column_a). The specifics of the function names are different, but the basic idea is the same.\nHere are some of the basics to help you get started coding in R.\n\nRStudio\nRStudio is the interface we’ll use to write and run R code and see its output. The interface has 4 panels, each with a few tabs:\n\n\nTop-left: Code editor / data viewer\n\nYou will type code here\nYou can run a line of code by clicking on it and pressing Ctrl/Cmd + Enter on your keyboard\n\nBottom-left: R console\n\nYou can type code directly and run it by pressing enter.\nYou won’t be saving your code as a document like when you type in in the editor, so this is useful for just testing something before you commit it to your working document\n\nTop-right: Environment\n\nAs you excute code you may be creating objects like sets of numbers of data.frames. Those objects will appear here.\nYou can click the name of some objects, like data.frames, and it will open a view of the data as a tab in the editor pane\n\nBottom-right: Files/folders, plot viewer, help window\n\nYou can navigate the file tree, and you will see any plots you create appear here\n\n\n\n\nAssignment\nR has a fancy assignment operator: <-.1 You assign things to a name by typing something like:\n\nname <- thing\n\nThe thing there might be a set of numbers, an entire dataset, or something else. Giving it a name allows to you perform subsequent operations more easily, and choosing appropriate names makes your code easier to understand.\n\noriginal_numbers <- 1:10\noriginal_numbers\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\ndoubled_numbers <- original_numbers * 2\ndoubled_numbers\n\n [1]  2  4  6  8 10 12 14 16 18 20\n\n\n\n\nFunctions\nAlmost everything happens inside functions.\n\nmean(original_numbers)\n\n[1] 5.5\n\nmean(doubled_numbers)\n\n[1] 11\n\n\nYou can also nest functions inside one another.\n\nsqrt(mean(original_numbers))\n\n[1] 2.345208\n\n\nA function generally has one or more “arguments”, to which you supply parameters. For example, the mean() function’s first argument is the set of numbers you want to compute the mean of; in the previous examples original_numbers and doubled_numbers were the parameters I supplied. You don’t necessarily have to type the name of the argument, but it can be helpful. The seq() function, for example, produces a sequence of numbers according to three arguments, from, to, and by.\n\nseq(from = 1, to = 10, by = 2)\n\n[1] 1 3 5 7 9\n\n\nWhen you don’t type the names of the arguments, R matches them by position, so this gives exactly the same output as the previous line of code:\n\nseq(1, 10, 2)\n\n[1] 1 3 5 7 9\n\n\nYou can get help with a function (to see what arguments it accepts, for example) by typing a question mark followed by the function name (without parentheses) in your console.\n\n?mean\n\nRunning the code will bring up the function’s help documentation in RStudio’s Help pane.\n\n\nPiping\nYou can string together different operations in a pipeline using the pipe operator: |>.2 The result of each line of code gets “piped” into the function on the next line as its first argument. For example, below I take some data (named data) and perform a series of operations, first selecting a subset of columns, then filtering rows based on whether the values in certain columns meet specified criteria, then I create (mutate) a new column averaging across existing columns; and lastly, I summarize the new column down to an average value.\n\ndata |> \n  select(column_a, column_b) |> \n  filter(if_all(c(column_a, column_b), ~!is.na(.))) |> \n  mutate(column_c = rowSums(across(everything()))) |> \n  summarize(mean_sum = mean(column_c))\n\nThere’s a lot going on there, and the specifics will become clearer as we work though this project. But using the pipe operator this way can make for relatively readable code."
  },
  {
    "objectID": "appendix-correlation.html#calculating-the-correlation-coefficient",
    "href": "appendix-correlation.html#calculating-the-correlation-coefficient",
    "title": "Appendix B — Correlation",
    "section": "Calculating the correlation coefficient",
    "text": "Calculating the correlation coefficient\nTo calculate the correlation between two variables, you must first calculate the Sum Product, \\(SP\\). The mathematical formula is:\n\\[\nSP = (X-M_X)(Y-M_Y)\n\\]\nNotice that \\(X - M_X\\) and \\(Y - M_Y\\) are deviation scores, just like we calculated for the standard deviation. Here we have two variables, \\(X\\) and \\(Y\\), so the equation is telling us to calculate the deviation of each score from its respective mean. We then multiply each deviation for variable \\(X\\) by its counterpart deviation from variable \\(Y\\). These are the “products,” meaning multiplied deviation scores. Finally, the tells us to add up all those products, giving the “sum of products,” \\(SP\\).\nOnce we have calculated \\(SP\\), the correlation coefficient, symbolized by \\(r\\) is calculated using the following equation:\n\\[\nr = \\dfrac{SP}{\\sqrt{SS_X SS_Y}}\n\\]\nHere, \\(SS_X\\) and \\(SS_Y\\) are the Sums of Squares for each variable. Multiplying them and taking the square root gets us a measure of the variability in \\(X\\) and \\(Y\\) separately. The numerator, \\(SP\\), represents the covariability of \\(X\\) and \\(Y\\). So the equation results in covariability as a proportion of all variability. It can range from \\(-1\\), meaning a perfect negative correlation, to \\(0\\), meaning no correlation at all, to \\(+1\\), meaning a perfect positive correlation."
  },
  {
    "objectID": "appendix-correlation.html#sec-cor-effect-size",
    "href": "appendix-correlation.html#sec-cor-effect-size",
    "title": "Appendix B — Correlation",
    "section": "Effect size for correlation",
    "text": "Effect size for correlation\nThe correlation coefficient is a measure of effect size. It’s absolute value can range from 0 to 1.\nAs a rule of thumb, in psychology, correlations of less than around \\(\\pm 0.30\\) are considered weak, around \\(\\pm 0.30\\) to \\(\\pm 0.70\\) are considered moderate, and greater than around \\(\\pm 0.70\\) are considered large."
  },
  {
    "objectID": "appendix-rubric.html",
    "href": "appendix-rubric.html",
    "title": "Appendix C — Grading rubric",
    "section": "",
    "text": "For each presentation and project report you will receive a score out of 100 according to the rubric below.\nNote that presentations will be given jointly. In general, grades will be the same for all group members as it is expected that group members will contribute equally to the presentation; however, exceptions may be made when it is clear that group members did not all contribute equally.\nAlso note that even though projects will be a group effort, the written reports will be completed individually.\n\n\n\n\n\n\n\n\nGrade\nPoint range\nDescription\n\n\n\n\nA+\n97-100\nOutstanding and exceptional work. The report clearly articulates the problem, purpose, methods, and results. There is evidence of critical thought, and the report goes beyond the assignment requirements in terms of analysis or presentation. The report demonstrates a sophisticated understanding of the concepts and techniques used. The report is free of errors and is clearly and professionally written.\n\n\nA\n90-97\nExcellent work. The report clearly articulates the problem, purpose, methods, and results. There is evidence of critical thought. The report demonstrates a strong understanding of the concepts and techniques used. The report is virtually free of errors and is clearly and professionally written.\n\n\nB\n80-89\nAbove average work. The report articulates the problem, purpose, methods, and results. There is some evidence of critical thought. The report demonstrates a good understanding of the concepts and techniques used. There are minor errors in the report, but the writing is generally clear and professional.\n\n\nC\n70-79\nSatisfactory work. The report articulates the problem, purpose, methods, and results but may lack clarity or detail. There is minimal evidence of critical thought. The report demonstrates an acceptable understanding of the concepts and techniques used. There are noticeable errors in the report, and the writing could be improved.\n\n\nD\n60-69\nBelow average work. The report does not clearly articulate the problem, purpose, methods, or results. There is little to no evidence of critical thought. The report demonstrates a minimal understanding of the concepts and techniques used. There are significant errors in the report, and the writing is unclear.\n\n\nF\n<60\nUnsatisfactory work. The report does not articulate the problem, purpose, methods, or results. There is no evidence of critical thought. The report demonstrates a lack of understanding of the concepts and techniques used. The report is filled with errors, and the writing is poor."
  }
]